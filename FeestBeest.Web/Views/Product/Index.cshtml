@model FeestBeest.Web.Models.ProductsOverViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

<div class="container mx-auto px-4 min-h-screen w-screen">
    <h2 class="text-2xl font-bold mb-4">Products</h2>
    <a href="@Url.Action("Create")" class="uk-button uk-button-primary bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">New Product</a>
    <div class="flex flex-wrap mt-4">
        @foreach (var product in Model.Products)
        {
            <div class="bg-white border border-gray-200 rounded-lg shadow-lg m-4 p-4 w-64" id="beestje-@product.Id">
                <img src="~/Img/Beestjes/@product.Img" class="h-32 w-full object-contain mb-4" />
                <div class="text-lg font-bold mb-2">@product.Name</div>
                <div class="text-gray-700 mb-4">@product.Type</div>
                <div class="text-gray-900 font-semibold mb-4">€@product.Price</div>
                <div class="flex justify-between">
                    <button type="button" onclick="openModal('@product.Id')" class="uk-button uk-button-danger bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600">Verwijderen</button>
                    <a href="@Url.Action("Edit", new { id = product.Id })" class="uk-button uk-button-default bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600">Bewerken</a>
                </div>
            </div>
        }
    </div>
</div>

<div id="deleteModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-md">
        <h2 class="text-xl font-bold mb-4">Are you sure you want to delete this product?</h2>
        <div class="flex justify-end space-x-4">
            <button type="button" onclick="closeModal()" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">No</button>
            <button id="confirmDelete" type="button" class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600">Sure</button>
        </div>
    </div>
</div>

<script>
    let deleteId = null;

    function openModal(id) {
        deleteId = id;
        document.getElementById('deleteModal').classList.remove('hidden');
    }

    function closeModal() {
        document.getElementById('deleteModal').classList.add('hidden');
        deleteId = null;
    }

    document.getElementById('confirmDelete').addEventListener('click', async () => {
        if (deleteId !== null) {
            try {
                const response = await fetch(`@Url.Action("Delete")/${deleteId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': '@Antiforgery.GetAndStoreTokens(Context).RequestToken'
                    }
                });

                if (response.ok) {
                    document.getElementById(`beestje-${deleteId}`).remove();
                    closeModal();
                } else {
                    console.error('Verwijderen mislukt', response.status);
                }
            } catch (error) {
                console.error('Fout bij verwijderen', error);
            }
        }
    });
</script>